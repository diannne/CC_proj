//===========================================================================
//===========================================================================
//===========================================================================
//==      ColorTransfer.h   ==   Author: Diana-Maria Popa       ==
//===========================================================================
//===========================================================================
//===========================================================================

//===========================================================================
//===========================================================================
#ifndef __COLORTRANSFER__H__
#define __COLORTRANSFER__H__
//===========================================================================
//===========================================================================

//===========================================================================
//===========================================================================
#include "./FreeImage/FreeImage.h"
#include "Direct_Access_Image.h"
#include <stdio.h>
#include <stdlib.h>
#include "MatrixModule.h"
#include "PdfTransfer.h"
//===========================================================================
//===========================================================================

//===========================================================================
//===========================================================================
class ColorTransfer
{
public:
	//constructor receiveing input image and palette
	ColorTransfer(KImage *input , KImage *target ,  unsigned int iterations = 10 );
	KImage * applyRecoloring();
	bool saveImage();
	~ColorTransfer();
private:
	double * _inputImage;
	double * _palette;
	unsigned int _iterations ;
	double **_rotations;
	void generateRotationMatrix();
	double adjustPixel(double);
	MatrixModule *_matrixModule;
	PdfTransfer *_pdfTransfer;
	KImage * _input;
	KImage * _gradedImage;
};
#endif